﻿@using FINCORE.Models.Models.Payment.CashierSessionVerify
@using FINCORE.Services.Helpers.Models.Pagination
@using Newtonsoft.Json
@model PaginationModels<PaginationCashierSessionVerifyModels>

@{
	ViewData["TitlePaging"] = "CASHIER SESSION VERIFY";
	ViewData["Title"] = "CASHIER SESSION VERIFY";
}

<input type="hidden" id="totalpages" value="@Model.TotalPages">

@if (TempData["Error"] is not null)
{
	<script>
		Common.Alert.Error("@TempData["Error"]");
	</script>
}

@if (TempData["Warning"] is not null)
{
	<script>
		Common.Alert.Warning("@TempData["Warning"]");
	</script>
}

@if (TempData["Success"] is not null)
{
	<script>
		Common.Alert.Success("@TempData["Success"]");
	</script>
}

<style>
	th {
		text-align: center;
	}
</style>

<div class="container">
	<div asp-validation-summary="All" class="text-danger"></div>
	<form name="pagination" asp-action="Index" asp-controller="CashierSessionVerify" method="post">
		<div class="form-group row">
			<table>
				<tr>
					<td style="font-weight:bold;">Session ID</td>
				</tr>
				<tr><td style="padding: 5px"></td></tr>
				<tr>
					<td><input class="form-control" id="txsearch" name="searchTerm" type="number" value="" placeholder="Input Session ID ..." /></td>
					<td>
						<button class="btn btn-secondary" type="submit" id="btnsearch" style="margin-left:10px">
							<i class="fa fa-search"></i> Search
						</button> &nbsp;
					</td>
				</tr>
			</table>
		</div>
		<div class="form-group row">
			<table id="example" class="table table-striped table-bordered" style="width:100%; font-size: 9px;">
				<thead>
					<tr style="background-color: #ffd951; color: #000;">
						<th style="color: #ffd951 !important">SESSION</th>
						<th>CABANG</th>
						<th>SESSION ID</th>
						<th>CLOSE DATE</th>
						<th>CLOSE AMOUNT</th>
						<th>TRANSACTION DETAIL RECEIPT</th>
						<th>TRANSACTION DETAIL EXPENSES</th>
						<th>CASH INCOME AMOUNT</th>
						<th>CASH EXPENSES AMOUNT</th>
						<th>TOTAL CASH AMOUNT</th>
						<th>USER ID</th>
						<th>PRINT</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						@if (Model.Model is not null && Model.Model.Count > 0)
						{
							foreach (var item in Model.Model)
							{
							<tr>
								<td style="text-align:center;">
										@if (@item.VerifyBy != null && @item.VerifyDate != null)
										{
										<input class="checkoption" type="checkbox" id="isVerify" checked disabled />
										}
										else
										{
										<input onchange="toggleCheckbox(this);return false" sessionid='@item.SessionId' cashAmount='@item.TotalCashAmount' false;" type="checkbox" id="verifyData" name="SessionId" value="@item.SessionId" />
										<input type="hidden" id="verifyCashIncomeAmount" name="TotalCashAmount" value="@item.TotalCashAmount" />
										}
								</td>
								<td>@item.Branch</td>
								<td>@item.SessionId</td>
								<td style="text-align: center;">@item.GetFormatedCloseDate()</td>
								<td style="text-align:right;">@item.CloseAmount</td>
								<td style="text-align:right;"><a onclick="ViewTransReceiptDetail(this);return false" sessionid='@item.SessionId' false;" href='#'>@item.TransactionDetailReceipt</a></td>
								<td style="text-align:right;"><a onclick="ViewTransExpDetail(this);return false" sessionid='@item.SessionId' false;" href='#'>@item.TransactionDetailExpenses</a></td>
								<td style="text-align:right;">@Html.Raw(@String.Format("{0:Rp #,###.00;(Rp #,###.00);Rp 0.00}", @item.CashIncomeAmount))</td>
								<td style="text-align:right;">@Html.Raw(@String.Format("{0:Rp #,###.00;(Rp #,###.00);Rp 0.00}", @item.CashExpensesAmount))</td>
								<td style="text-align:right;">@Html.Raw(@String.Format("{0:Rp #,###.00;(Rp #,###.00);Rp 0.00}", @item.TotalCashAmount))</td>
								<td>@item.UserId</td>
								<td>
									<button style="border-color:antiquewhite"><img src="~/assets/ico/print.png"></button>
								</td>
							</tr>
							}
						}
						else
						{
						<tr>
							<td colspan="12">
								<div class="text-center">Data Not Available</div>
							</td>
						</tr>
						}
				</tbody>
			</table>
		</div>
		<div class="form-group row">
			@{
				var pageSize = Model.PageSize;
				var pageIndex = Model.PageIndex;
				var recordCount = Model.RecordCount;
				var totalPages = Model.TotalPages;
			}

			<div style="padding-right:5px">
				@if (pageIndex > 1)
				{
					<button class="btn btn-secondary" type="submit" title="Previous Page" id="btnprev"><i class="fa fa-arrow-left"></i> Previous</button>
				}

				@if (pageIndex < totalPages)
				{
					<button class="btn btn-secondary" type="submit" title="Next Page" id="btnnext">Next <i class="fa fa-arrow-right"></i></button>
				}

				&nbsp;Page

			</div>
			<table>
				<tr>
					<td>
						<input class="form-control" id="txpages" title="Current Page. And you can input destination page" style="width: 70px; height:25px" type="number" name="pageIndex" value="@pageIndex" />
					</td>
					<td>
						<div style="margin-left:6px">of &nbsp @(totalPages == 0 ? 1 : @totalPages)</div>
					</td>
					<td>
						<button type="button" class="btn btn-secondary" id="btngo" title="Goto selected page" style="margin-left:10px">Go</button>
					</td>
					<td>
						<div style="padding-left:10px">
							@recordCount Record(s)
						</div>
					</td>
				</tr>
			</table>
		</div>
	</form>
</div>

<div class="row">
	<div class="col text-center">
		<a href="" class="btn-submit" style="max-width: 100%;">VERIFY</a>
	</div>
</div>

<!-- Start Detail From Receipt -->
<form name="DetailFromReceipt" method="post" asp-action="TransactionDetailReceipt" asp-controller="CashierSessionVerify">
	<input type="hidden" id="detailsessionid" name="sessionid" />
</form>
<!-- End Detail From Receipt -->
<!-- Start Detail From Expenditure -->
<form name="DetailFormExpenditure" method="post" asp-action="TransactionDetailExpenditure" asp-controller="CashierSessionVerify">
	<input type="hidden" id="detailsessionid2" name="sessionid" />
</form>
<!-- End Detail From Expenditure -->

<form name="VerifyForm" method="post" asp-action="Verify" asp-controller="CashierSessionVerify">
	<input type="hidden" id="verifyDataForm" name="SessionId" value="" />
</form>

<script type="text/javascript">
	function ViewTransReceiptDetail(data) {

		var sessionId = data.getAttribute("sessionid");

		document.getElementById("detailsessionid").value = sessionId;

		$('form[name="DetailFromReceipt"]').submit();
	}

	function ViewTransExpDetail(data) {

		var sessionId = data.getAttribute("sessionid");

		document.getElementById("detailsessionid2").value = sessionId;

		$('form[name="DetailFormExpenditure"]').submit();
	}

	// [START][Checked Only 1 Row Data]
	$('input[name="SessionId"]').on('change', function () {
		$('input[name="SessionId"]').not(this).prop('checked', false);
	});
	// [END][Checked Only 1 Row Data]

	function toggleCheckbox(element) {
		var cashAmount = element.getAttribute("cashAmount");
		document.getElementById("verifyCashIncomeAmount").value = cashAmount;
	}
	// [START][VERIFY]
	$('.btn-submit').on('click', function (e) {
		e.preventDefault();

		var checkedValue = $('#verifyData:checked').val();
		document.getElementById("verifyDataForm").value = checkedValue;
		var incomeAmount = $("#verifyCashIncomeAmount").val();

		//if (incomeAmount < 1 && $('input[name="SessionId"]').is(':checked')) {
		//	Common.Alert.Error("The Cash Amount value for SessionID (" + checkedValue + ") is invalid");
		//	return;
		//}
		//else
		if ($('input[name="SessionId"]').is(':checked') /*&& $('#verifyData').val() == null*/) {
			swal({
				title: "Are you sure?",
				text: "You will not be able to recover this Data!",
				type: "warning",
				showCancelButton: true,
				confirmButtonColor: "#ffd951",
				confirmButtonText: "Yes, Verify Data!",
				closeOnConfirm: false
			}, function (isConfirm) {
				if (isConfirm)
					$('form[name="VerifyForm"]').submit();
			});
		}
		else {
			Common.Alert.Warning("Please choose atleast 1 data!");
		}
	});
	// [END][VERIFY]

</script>

<script type="text/javascript">

	$(document).ready(function () {
		var totalpages = $("#totalpages").val();

		$("#btnsearch").click(function (e) {
			e.preventDefault();
			$("#txpages").val('1');
			$('form[name="pagination"]').submit();
		})

		$("#btnnext").click(function (e) {
			e.preventDefault();
			var nextPage = parseInt($("#txpages").val()) + 1;
			$("#txpages").val(nextPage);
			if (parseInt(nextPage) > totalpages) {
				Common.Alert.Warning("The number exceeds the total page. Please enter with a lower number.");
			} else {
				$('form[name="pagination"]').submit();
			}
		})

		$("#btnprev").click(function (e) {
			e.preventDefault();
			var prevPage = parseInt($("#txpages").val()) - 1;
			$("#txpages").val(prevPage);
			$('form[name="pagination"]').submit();
		})

		$("#btngo").click(function (e) {
			e.preventDefault();
			var selectedPage = $("#txpages").val();

			if (parseInt(selectedPage) > totalpages) {
				Common.Alert.Warning("The number exceeds the total page. Please enter with a lower number.");
			}
			else {
				$('form[name="pagination"]').submit();
			}
		})
	});

</script>